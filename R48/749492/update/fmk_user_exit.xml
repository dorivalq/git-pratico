<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

	<changeSet author="fabiofernandes81" id="1">
		<update tableName="FMK_USER_EXIT">
			<column name="CL_USER_EXIT_SCRIPT" value="package com.thomsonreuters.ta.taxbr.efdsocial.company.service.impl; &#13;&#10;import java.util.List; &#13;&#10;import java.util.ArrayList; &#13;&#10;import java.util.Map; &#13;&#10;import com.thomsonreuters.company.entity.TbrCadCompanyNoFilter; &#13;&#10;import com.thomsonreuters.company.service.TbrCadCompanyNoFilterService; &#13;&#10;import com.thomsonreuters.taxit.exception.TaxitApplicationException; &#13;&#10;import com.thomsonreuters.taxit.persistence.entity.TaxitEntityBase; &#13;&#10;import com.thomsonreuters.taxit.productlicense.entity.FmkProductLicense; &#13;&#10;import com.thomsonreuters.taxit.productlicense.entity.valueobject.FmkProductLicenseCompany; &#13;&#10;import com.thomsonreuters.taxit.productlicense.service.TaxitLicenseService; &#13;&#10;import com.thomsonreuters.taxit.productlicense.util.TaxitFederalIdUtils; &#13;&#10;import com.thomsonreuters.taxit.spring.TaxitApplicationContext; &#13;&#10;import com.thomsonreuters.taxit.userexit.TaxitUserExit; &#13;&#10;import com.thomsonreuters.taxit.userexit.exception.TaxitUserExitException; &#13;&#10;public class TaxitLicenseServiceEventsImpl implements TaxitUserExit { &#13;&#10;@Override public void init(final TaxitEntityBase entityBase) throws TaxitUserExitException {} &#13;&#10;@Override public void execute(final TaxitEntityBase entityBase) throws TaxitUserExitException { &#13;&#10;TaxitLicenseService taxitLicenseService = TaxitApplicationContext.getApplicationContext().getBean(TaxitLicenseService.class); &#13;&#10;TbrCadCompanyNoFilterService tbrCadCompanyNoFilterService = TaxitApplicationContext.getApplicationContext().getBean(TbrCadCompanyNoFilterService.class); &#13;&#10;TaxitFederalIdUtils taxitFederalIdUtils = TaxitApplicationContext.getApplicationContext().getBean(TaxitFederalIdUtils.class); &#13;&#10;FmkProductLicense license = (FmkProductLicense) entityBase; &#13;&#10;List&lt;FmkProductLicenseCompany&gt; companies; &#13;&#10;try { &#13;&#10;List&lt;String&gt; modules = new ArrayList&lt;String&gt;(); &#13;&#10;modules.add(&quot;ESOCIAL&quot;); &#13;&#10;modules.add(&quot;EIRPJ&quot;); &#13;&#10;companies = taxitLicenseService.getCompanyNames(license.getLicenseContent(), modules); &#13;&#10;for (FmkProductLicenseCompany company : companies) { &#13;&#10;TbrCadCompanyNoFilter tbrCompany = new TbrCadCompanyNoFilter(); &#13;&#10;tbrCompany.setCodCompany(company.getId()); &#13;&#10;List&lt;TbrCadCompanyNoFilter&gt; tbrCadCompanies = tbrCadCompanyNoFilterService.findByFilter(tbrCompany); &#13;&#10;if (tbrCadCompanies != null &amp;&amp; tbrCadCompanies.size() &gt; 0) { &#13;&#10;tbrCompany = tbrCadCompanies.get(0); &#13;&#10;} &#13;&#10;tbrCompany.setNumFedTax(company.getFederalId()); &#13;&#10;tbrCompany.setDscCompany(company.getName()); &#13;&#10;tbrCadCompanyNoFilterService.save(tbrCompany);  &#13;&#10;} &#13;&#10;} catch (TaxitApplicationException e) { &#13;&#10;throw new TaxitUserExitException(e); &#13;&#10;} } &#13;&#10;@Override public void finish(final TaxitEntityBase entityBase) throws TaxitUserExitException {} &#13;&#10;@Override public String getLoggedUserName() { return null; } &#13;&#10;@Override public Object getSaasPartition() { return null; } &#13;&#10;@Override public void setMapParams(final Map&lt;String, Object&gt; map) {} &#13;&#10;@Override public void addParamToMap(final String paramName, final Object paramValue) {} &#13;&#10;}" />
		 	<where>S_NAME_USER_EXIT = 'CreateLicenceCompany' </where>		
		</update>
		<rollback/>
	</changeSet>

</databaseChangeLog>
